/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kasirpbo;

import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.ResultSetMetaData;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.util.ArrayList;
//import java.sql.PreparedStatement;
import net.proteanit.sql.DbUtils;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ASUS
 */
public class FormDataBarang extends javax.swing.JFrame {

    Connection con;
    Statement stat;
    PreparedStatement st;
    ResultSet rs;
    String sql;
    
    public FormDataBarang() {
        initComponents();
        setTitle("Kasir toko login ");
        setLocationRelativeTo(null);
        
        Koneksi db = new Koneksi();
        db.config();
        con = db.con;
        stat = db.stm;
        
        populateDataTable();
    }
    
    private void ClearField() {
        NamaBarang.setText(null);
        HargaBarang.setText(null);
        StokBarang.setText(null);
        Kode.setText(null);
    }
    
   
    private void populateDataTable() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbkasirpbo", "root", "");
            stat = con.createStatement();
            sql = "select * from barang_table";
            rs = stat.executeQuery(sql);

            DefaultTableModel tblModel = (DefaultTableModel) BarangTable.getModel();
            tblModel.setRowCount(0);

            while (rs.next()) {
                String id = String.valueOf(rs.getInt("id"));
                String kode = String.valueOf(rs.getString("Kode"));
                String nama = String.valueOf(rs.getString("Nama_barang"));
                String harga = String.valueOf(rs.getInt("Harga_barang"));
                String stok = String.valueOf(rs.getInt("Stok_barang"));

                String tbData[] = {id, kode, nama, harga, stok};

                tblModel.addRow(tbData);
            }
            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this, "Error populating data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    

     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NamaBarang = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        HargaBarang = new javax.swing.JTextField();
        StokBarang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        DataTable = new javax.swing.JButton();
        AddBTN = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        UpdateBTN = new javax.swing.JButton();
        DeleteBTN = new javax.swing.JButton();
        Search = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        BarangTable = new javax.swing.JTable();
        Kode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("DATA BARANG");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nama Barang");

        NamaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamaBarangActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Harga Barang");

        HargaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HargaBarangActionPerformed(evt);
            }
        });

        StokBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StokBarangActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Stok");

        DataTable.setText("Refresh");
        DataTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataTableActionPerformed(evt);
            }
        });

        AddBTN.setText("Add");
        AddBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBTNActionPerformed(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        UpdateBTN.setText("Update");
        UpdateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBTNActionPerformed(evt);
            }
        });

        DeleteBTN.setText("Delete");
        DeleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBTNActionPerformed(evt);
            }
        });

        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Search");

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        BarangTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Kode", "Nama Barang", "Harga Barang", "Stok"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BarangTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BarangTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(BarangTable);

        Kode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KodeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Kode");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteBTN)
                        .addGap(83, 83, 83)
                        .addComponent(DataTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Kode, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(167, 167, 167)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Kode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteBTN)
                    .addComponent(UpdateBTN)
                    .addComponent(AddBTN)
                    .addComponent(DataTable)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NamaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamaBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamaBarangActionPerformed

    private void HargaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HargaBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HargaBarangActionPerformed

    private void StokBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StokBarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StokBarangActionPerformed

    private void DataTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataTableActionPerformed
      try{
          Class.forName("com.mysql.jdbc.Driver");
          Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbkasirpbo", "root", "");
          Statement stat = con.createStatement();
          String sql = "select * from barang_table";
          ResultSet rs = stat.executeQuery(sql);
          
          DefaultTableModel tblModel = (DefaultTableModel) BarangTable.getModel();
            tblModel.setRowCount(0);
        
          while(rs.next()) {
              String id = String.valueOf(rs.getInt("id"));
              String kode = String.valueOf(rs.getString("Kode"));
              String nama = String.valueOf(rs.getString("Nama_barang"));
              String harga = String.valueOf(rs.getInt("Harga_barang"));
              String stok = String.valueOf(rs.getInt("Stok_barang"));
              
              String tbData[ ] = {id, kode, nama, harga, stok };
   
                tblModel.addRow(tbData);
                
          }
          
          } catch(Exception e) {
              System.out.println(e.getMessage());
          }
    }//GEN-LAST:event_DataTableActionPerformed

    private void AddBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBTNActionPerformed
        try {
            String sql = "INSERT INTO barang_table (Kode, Nama_barang, Harga_barang, Stok_barang) "
                    + "VALUES ('" + Kode.getText() + "', '" + NamaBarang.getText() + "', '" + HargaBarang.getText() + "', '" + StokBarang.getText() + "');";
            PreparedStatement preparedStatement = (PreparedStatement) con.prepareStatement(sql);
            preparedStatement.execute();
            JOptionPane.showMessageDialog(null, "Data Berhasil ditambahkan!");

               ClearField();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_AddBTNActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       dispose();
       AdminDashboard.main(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void UpdateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBTNActionPerformed
     // Get the selected row index
        int selectedRow = BarangTable.getSelectedRow();

        // Check if a row is selected
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the new values from JTextFields
        String id = (String) BarangTable.getValueAt(selectedRow, 0);
        String kode = Kode.getText();
        String nama = NamaBarang.getText();
        String harga = HargaBarang.getText();
        String stok = StokBarang.getText();

        // Validate user input (optional, add checks for empty fields, numeric values, etc.)
        try {
            Integer.parseInt(harga); // Check if price is a valid integer
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid price format. Please enter a number.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit if price is invalid
        }

        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dbkasirpbo", "root", "");
            st = (PreparedStatement) con.prepareStatement("UPDATE barang_table SET Kode=?, Nama_barang=?, Harga_barang=?, Stok_barang=? WHERE id=?");
            st.setString(1, kode);
            st.setString(2, nama);
            st.setString(3, harga);
            st.setString(4, stok);
            st.setString(5, id);

            int rowsUpdated = st.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Data updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                // Update the JTable model with the new values
                BarangTable.setValueAt(kode, selectedRow, 1);
                BarangTable.setValueAt(nama, selectedRow, 2);
                BarangTable.setValueAt(harga, selectedRow, 3);
                BarangTable.setValueAt(stok, selectedRow, 4);
            } else {
                JOptionPane.showMessageDialog(this, "No rows updated. Check your data.", "Warning", JOptionPane.WARNING_MESSAGE);
            } 

//            con.close();
            } catch (SQLException e) {
        System.out.println("Error updating data: " + e.getMessage());
        JOptionPane.showMessageDialog(this, "Error updating data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }   catch (ClassNotFoundException ex) {
            Logger.getLogger(FormDataBarang.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
//            con.close(); // Ensure connection is closed even if an exception occurs

    }
    }//GEN-LAST:event_UpdateBTNActionPerformed

    private void DeleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBTNActionPerformed
            int row = BarangTable.getSelectedRow();
            String cell = BarangTable.getModel().getValueAt(row, 0).toString();
            String sql = "DELETE FROM barang_table where id = " + cell;
            try {
                st = (PreparedStatement) con.prepareStatement(sql);
                st.execute();
                JOptionPane.showMessageDialog(null, "Berhasil dihapus");
            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }



//      DefaultTableModel tblModel = (DefaultTableModel) BarangTable.getModel();
//      
//      if(BarangTable.getSelectedRowCount()==1) {
//          tblModel.removeRow(BarangTable.getSelectedRow());
//          }else{
//                if(BarangTable.getRowCount()==0) {
////                    Tabel kosong
//                    JOptionPane.showMessageDialog(this, "Tabel kosong");
//                }else{
//                     JOptionPane.showMessageDialog(this, "Silahkan pilih 1 untuk dihapus ");
//                }
//      }
    }//GEN-LAST:event_DeleteBTNActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       ClearField();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchKeyReleased
       DefaultTableModel tabel =(DefaultTableModel) BarangTable.getModel();
       TableRowSorter<DefaultTableModel> obj=new TableRowSorter<>(tabel);
       BarangTable.setRowSorter(obj);
       obj.setRowFilter(RowFilter.regexFilter(Search.getText()));
    }//GEN-LAST:event_SearchKeyReleased

    private void BarangTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BarangTableMouseClicked
        int row = BarangTable.rowAtPoint(evt.getPoint());
        Kode.setText(BarangTable.getValueAt(row, 1).toString());
        NamaBarang.setText(BarangTable.getValueAt(row, 2).toString());
        HargaBarang.setText(BarangTable.getValueAt(row, 3).toString());
        StokBarang.setText(BarangTable.getValueAt(row, 4).toString());
    }//GEN-LAST:event_BarangTableMouseClicked

    private void KodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDataBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBTN;
    private javax.swing.JTable BarangTable;
    private javax.swing.JButton DataTable;
    private javax.swing.JButton DeleteBTN;
    private javax.swing.JTextField HargaBarang;
    private javax.swing.JTextField Kode;
    private javax.swing.JTextField NamaBarang;
    private javax.swing.JTextField Search;
    private javax.swing.JTextField StokBarang;
    private javax.swing.JButton UpdateBTN;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
